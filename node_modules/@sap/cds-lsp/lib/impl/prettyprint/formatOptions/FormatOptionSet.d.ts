import { Logger } from '../util/Logger';
import { FormatOptionValue, MetaModel, MetaOptionMap, OptionName } from './MetaModel';
export declare type OptionMap<MM extends MetaOptionMap<MM>> = {
    [name in OptionName<MM>]?: FormatOptionValue;
};
export declare class FormatOptionSet<MM extends MetaOptionMap<MM>> {
    readonly metaModel: MetaModel<MM>;
    private options;
    private logger;
    private sourceTag;
    static readonly defaultsSymbol: unique symbol;
    constructor(metaModel: MetaModel<MM>, options: OptionMap<MM>, logger: Logger, sourceTag: string);
    getOption(name: OptionName<MM>): FormatOptionValue | null;
    setOption(name: OptionName<MM>, value: FormatOptionValue): boolean;
    overlayWith(other: FormatOptionSet<MM>): void;
    getOptionNames(): Array<OptionName<MM>>;
}
