import { Alignment } from '../Alignment';
import { PpChild } from '../PpBaseTypes';
import { PpRuleNode } from '../PpRuleNode';
import { PpRuleToken } from '../PpRuleToken';
import { FormattingInstructionOrAlignment } from './FormattingBasics';
import { GenericElementComponentsFormatter } from './GenericElementComponentsFormatter';
export declare class ElementDefInnerFormatter extends GenericElementComponentsFormatter {
    private entityDefAncestor;
    private alignName;
    private alignedWithName;
    private annotationAlignedWithName;
    beforeNodeNoCache(node: PpRuleNode): FormattingInstructionOrAlignment[];
    beforeChildNoCache(node: PpRuleNode, child: PpChild, children: PpChild[]): FormattingInstructionOrAlignment[];
    afterChildNoCache(node: PpRuleNode, child: PpChild, children: PpChild[]): FormattingInstructionOrAlignment[];
    getAnnotationAlignment(token: PpRuleToken): Alignment;
}
