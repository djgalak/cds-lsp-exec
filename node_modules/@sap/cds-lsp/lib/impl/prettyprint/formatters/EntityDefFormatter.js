"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BlockRules_1 = require("../BlockRules");
const PpRuleNode_1 = require("../PpRuleNode");
const TreeUtil_1 = require("../util/TreeUtil");
const FormattingBasics_1 = require("./FormattingBasics");
class EntityDefFormatter extends FormattingBasics_1.NodeFormatter {
    constructor(node, context) {
        super(node, context);
        this.enablementSwitch = 'alignAsInEntities';
        this.onlyTokenChildren = true;
    }
    beforeChildNoCache(node, child, children) {
        if (child instanceof PpRuleNode_1.PpRuleNode || child.getLowerLexem() !== 'as') {
            return [];
        }
        const ancestor = TreeUtil_1.getNearestAncestor(this, BlockRules_1.BlockRules.contextDef) || TreeUtil_1.getNearestAncestor(this, BlockRules_1.BlockRules.extendContext) || TreeUtil_1.getNearestAncestor(this, BlockRules_1.BlockRules.start);
        return [
            ancestor === null || ancestor === void 0 ? void 0 : ancestor.getAlignment('entityAS', child.tokenIndex),
            'Â°'
        ];
    }
}
exports.EntityDefFormatter = EntityDefFormatter;
//# sourceMappingURL=EntityDefFormatter.js.map