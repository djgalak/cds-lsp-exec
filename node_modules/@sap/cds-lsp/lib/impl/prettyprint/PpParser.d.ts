import { PpParserContext } from './PpBaseTypes';
import { PpRuleNode } from './PpRuleNode';
import { PpToken } from './PpRuleToken';
import { Logger } from './util/Logger';
export declare class PpParser {
    private logger;
    constructor(logger?: Logger);
    fetchRuleTree(sOriginalSource: string): Promise<PpRuleNode>;
    private getDefaultOptions;
    tokenize(content: string): Promise<PpToken[]>;
    parse(content: string, context?: PpParserContext): Promise<PpRuleNode>;
}
export declare function convertSourceConfigValueToNativeType(sConfigValue: string): boolean | number | string;
