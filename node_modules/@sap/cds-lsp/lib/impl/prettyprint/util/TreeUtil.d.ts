import { FormattingStream } from '../FormattingStream';
import { PpChild } from '../PpBaseTypes';
import { PpRuleNode } from '../PpRuleNode';
import { PpRuleToken } from '../PpRuleToken';
declare type plusMinus1 = 1 | -1;
export interface Position {
    line: number;
    character: number;
}
export interface Range {
    start: Position;
    end: Position;
}
interface Child<P> {
    parent: P;
}
interface RuleChild<P> {
    parent: P;
    ruleName: string;
}
export declare function getAnnotationNumberInLine(node: PpRuleNode): any;
export declare function setAnnotationNumberInLine(node: PpRuleNode, n: number): number;
export declare function getAncestors<T extends Child<T>>(node: Child<T>, predicate?: (node: T) => boolean): Generator<T, void, unknown>;
export declare function getNearestAncestor<T extends RuleChild<T>>(node: RuleChild<T>, ...rules: string[]): T;
export declare function getFarthestAncestor<T extends RuleChild<T>>(node: RuleChild<T>, ...rules: string[]): T;
export declare function getPreviousSibling(child: PpChild, predicate: (child: PpChild) => boolean): PpChild;
export declare function getNextSibling(child: PpChild, predicate: (child: PpChild) => boolean): PpChild;
export declare function getFirstDescendant(node: PpRuleNode, predicate: (child: PpChild) => boolean): PpChild;
export declare function getLastDescendant(node: PpRuleNode, predicate: (child: PpChild) => boolean): PpChild;
export declare function hasDescendant(node: PpRuleNode, potentialDescendant: PpChild): boolean;
export declare function getPreviousToken(child: PpChild, predicate: (child: PpChild) => boolean): PpRuleToken;
export declare function getNextToken(child: PpChild, predicate: (child: PpChild) => boolean): PpRuleToken;
export declare function getAdjacentToken(child: PpChild, increment: plusMinus1, predicate: (child: PpChild) => boolean): PpRuleToken;
export declare function firstLineBreakBetween(index1: number, index2: number, formattingStream: FormattingStream): any;
export declare function nonComment(child: PpChild): boolean;
export declare function nonCommentNonAnnotation(child: PpChild): boolean;
export declare function any(arg: any): boolean;
export declare function countDirectChildren(node: PpRuleNode, ...ruleNames: string[]): number;
export declare function countDescendants(node: PpRuleNode, ...ruleNames: string[]): number;
export {};
