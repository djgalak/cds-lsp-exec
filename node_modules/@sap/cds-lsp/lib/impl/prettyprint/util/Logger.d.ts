import { ITracer } from '../../utils/trace/TracingInterfaces';
export declare type LogMessage = string | (() => string);
export declare class Logger {
    isTracing(pp: string): boolean;
    trace(...args: any[]): void;
    logError(e: LogMessage): void;
    logWarn(e: LogMessage): void;
    logInfo(s: LogMessage): void;
    logVerbose(s: LogMessage): void;
    logDebug(s: LogMessage): void;
}
export declare enum Color {
    BLOCK = 0,
    CATEGORY = 1,
    TOKEN = 2,
    ERROR_TOKEN = 3,
    COMMENT_TOKEN = 4,
    RULE = 5,
    ERROR = 6,
    WARN = 7,
    INFO = 8,
    RESET = 9
}
export interface IColorProvider {
    get(c: Color): string;
}
export declare class AnsiColorProvider implements IColorProvider {
    get(c: Color): string;
}
export declare class NoColorProvider implements IColorProvider {
    get(c: Color): string;
}
export declare function redirectLogger(tracer: ITracer, logger: Logger): Logger;
