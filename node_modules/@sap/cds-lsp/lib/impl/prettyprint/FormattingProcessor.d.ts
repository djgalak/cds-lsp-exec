import { BlockAlignmentManager } from './BlockAlignmentManager';
import { FormattingTrigger, RenderThing } from './GenericRuleRenderer';
import { GlobalContext } from './GlobalContext';
import { PpChild } from './PpBaseTypes';
export declare class FormattingProcessor {
    private readonly globalContext;
    private blockAlignmentManager;
    private nextRemovableNewline;
    constructor(globalContext: GlobalContext, blockAlignmentManager: BlockAlignmentManager);
    appendToStream(x: RenderThing): void;
    processFormatting(sFormat: string, formattedObject: PpChild, trigger: FormattingTrigger, ignoreCache?: boolean): void;
    logFormattingInstructions(format: string, formattedObject: PpChild, trigger: FormattingTrigger, instructionId?: string): void;
}
