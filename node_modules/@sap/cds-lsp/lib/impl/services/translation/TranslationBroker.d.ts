import { I18nIndex, ITranslationBroker, Translation } from '../../utils';
import { ExtractedCdsEnv } from '../../utils/cdsenv';
import { IWorkspaceFolder } from '../IWorkspaceInterfaces';
export declare class TranslationBroker implements ITranslationBroker {
    private workspaceFolder;
    constructor(workspaceFolder: IWorkspaceFolder);
    private translationIndexes;
    private _fileOrder;
    private _sourcePathToI18nFolderPath;
    private _cdsEnvI18nFoldersUsedForCache;
    reset(): void;
    onTranslationFileChanged(cdsEnv: ExtractedCdsEnv, uri: string, content?: string): void;
    getTranslation(translationId: string): Translation;
    fetchAllTranslations(sourceFileUri: string): Promise<Translation[]>;
    fetchMostRelevantTranslationFileUris(forSourceUri: string): Promise<string[]>;
    protected fetchI18nFolder(sourceFileUri: string): Promise<string>;
    fetchTranslationIndex(translationFileUri: string): Promise<I18nIndex>;
    private createIndex;
    private calculateFileOrder;
}
