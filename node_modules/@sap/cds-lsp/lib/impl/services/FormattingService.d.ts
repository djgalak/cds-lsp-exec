import * as LSP from 'vscode-languageserver-protocol';
import { ICompiler } from '../model/Compiler';
import { CdsPrettyPrint, Formatted } from '../prettyprint/CdsPrettyPrint';
import { Position } from '../prettyprint/util/TreeUtil';
import { WorkspaceService } from './WorkspaceService';
export declare class FormattingService {
    private compiler;
    private workspaceService;
    private readonly tracer;
    private readonly logger;
    prettyPrinter: CdsPrettyPrint;
    constructor(compiler: ICompiler, workspaceService: WorkspaceService);
    onDocumentFormatting(params: LSP.DocumentFormattingParams): Promise<LSP.TextEdit[] | undefined>;
    onDocumentRangeFormatting(params: LSP.DocumentRangeFormattingParams): Promise<LSP.TextEdit[]>;
    onDocumentOnTypeFormatting(params: LSP.DocumentOnTypeFormattingParams): Promise<LSP.TextEdit[]>;
    private beautify;
    private fetchContent;
    protected getTextEdits(formatted: Formatted, lspRange?: LSP.Range, closingCharacterPosition?: Position): LSP.TextEdit[];
}
