/// <reference types="@sap__cds-compiler" />
import { WorkspaceDocuments, XsnCompileModel, XsnParseModel } from '@sap/cds-compiler';
import * as LSP from 'vscode-languageserver-protocol';
import { TextLines } from '../../utils';
import { IWorkspaceFolder } from '../IWorkspaceInterfaces';
export declare enum SortPrefix {
    CustomIdentifier = "1)",
    BuiltinIdentifier = "2)",
    Snippet = "3)",
    Keyword = "4)",
    File = "5)",
    Module = "6)",
    Translation = "7)",
    Annotation = "8)"
}
export declare class CompletionContext {
    compile: (context: CompletionContext, inlay?: string) => Promise<XsnCompileModel>;
    constructor(compile: (context: CompletionContext, inlay?: string) => Promise<XsnCompileModel>);
    textLines: TextLines;
    position: LSP.Position;
    prefix: string;
    suffix: string;
    workspaceFolder: IWorkspaceFolder;
    localTriggerPath: string;
    localTriggerDir: string;
    originalFiles: WorkspaceDocuments;
    originalContent: string;
    triggerUri: string;
    isEndOfStatement: boolean;
    parseAst: XsnParseModel;
    keywordMap: {
        [key: string]: any;
    };
}
export interface ProposalsProvider {
    readonly name: string;
    fetchProposals(context: CompletionContext): Promise<LSP.CompletionItem[]>;
}
export declare const SnippetTail = "\u2026";
