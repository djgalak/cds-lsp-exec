/// <reference types="@sap__cds-compiler" />
import { CdsCompiler } from '@sap/cds-compiler';
import { PathResolver } from '../index';
import { Cds } from './OriginalCdsEnv';
export declare enum Tool {
    DevKit = "@sap/cds-dk/package.json",
    Umbrella = "@sap/cds",
    Compiler = "@sap/cds-compiler"
}
export declare enum LogicalCompilerLocation {
    builtin = "included in Language Server",
    project = "from project",
    global = "globally installed"
}
export declare class UnsupportedValue extends Error {
    constructor(x: never);
}
export declare class ModuleLoader {
    readonly resolver: PathResolver;
    loadCds(fromFolder?: string): Cds;
    loadCompiler(projectRoot: string): CdsCompiler;
    protected requireModule(resolvedPath: string): any;
    protected startFolders(atLocation: LogicalCompilerLocation, projectRoot?: string): string[];
    protected compilerChain(atLocation: LogicalCompilerLocation, projectRoot?: string): Tool[];
    protected umbrellaChain(atLocation: LogicalCompilerLocation, projectRoot?: string): Tool[];
    protected resolveCompiler(logicalLocation: LogicalCompilerLocation, projectRoot?: string): Resolved;
    protected resolveUmbrella(logicalLocation: LogicalCompilerLocation, projectRoot?: string): Resolved;
    resolveGlobalSapCds(): Resolved;
}
interface Resolved {
    resolvedPath: string;
    logicalLocation: LogicalCompilerLocation;
}
export {};
