import { FootprintCustomizer, LspTraceComponent } from './TracingInterfaces';
export declare type Ambit2 = LspTraceComponent;
export declare function Footprint<T, R>(traceComponent: Ambit2, customizer?: FootprintCustomizer<T, R>): (target: T, method: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
export declare enum LspOperatingState {
    Operating = 1,
    Shutdown = 2,
    Ignore = 3
}
export interface RequestTraceCustomizer<R> {
    paramsRenderer: ((x: any) => any);
    resultRenderer: ((res: R) => any);
    onErrorReturn: any;
    trackMemory?: boolean;
    expectedState?: LspOperatingState;
    newState?: LspOperatingState;
}
export declare const FIRST_ARGUMENT = "FIRST_ARGUMENT";
export declare function RequestMethod<T, R>(cfg: RequestTraceCustomizer<R>): (target: T, method: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
