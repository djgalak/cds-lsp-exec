/// <reference types="node" />
import * as fs from 'fs';
import { ITracer } from './trace';
export declare const readFile: typeof fs.readFile.__promisify__;
export declare const readdir: typeof fs.readdir.__promisify__;
export declare function canonicalDriveLetter(filepath: string, referencePath: string): string;
export declare class PlatformTester {
    static isWindows(): boolean;
}
export declare function isUrl(uriOrPath: string): boolean;
export declare class LoopDetector {
    private referencePath;
    private tracer;
    private canonicalFoldersVisited;
    constructor(referencePath: string);
    visitFolder(absoluteFolder: string): Promise<boolean>;
}
export declare function scanForFiles(tracer: ITracer, rootPath: string, isRelevant: (filepath: string) => boolean, loopDetector: LoopDetector): Promise<string[]>;
export declare function toUnixPath(aPath: string): string;
export declare function toPlatformPath(aPath: string): string;
interface IPackageJson {
    readonly name?: string;
    readonly version?: string;
    readonly dependencies?: {
        readonly [name: string]: string;
    };
}
export declare function readPackageJson(folderPath: string): IPackageJson;
export {};
