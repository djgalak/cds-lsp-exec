/// <reference types="@sap__cds-compiler" />
import { Kind, Severity, XsnLocation, XsnPosition } from '@sap/cds-compiler';
import * as LSP from 'vscode-languageserver-protocol';
export declare class PositionAdapter {
    static adapt(cdsvPosition: XsnPosition): LSP.Position;
}
export declare class RangeAdapter {
    static adapt(cdsvLocation: XsnLocation): LSP.Range;
}
export declare function adaptRange(cdsvLocation: XsnLocation): LSP.Range;
export declare function adaptCompletionKind(cdsvKind: Kind): LSP.CompletionItemKind;
export declare const handle: <R>(prom: Promise<R>) => Promise<R[] | Error[]>;
export declare class SeverityAdapter {
    static adapt(severity: Severity): LSP.DiagnosticSeverity;
}
export declare function entries<T>(obj: {
    [key: string]: T;
}): Array<[string, T]>;
export declare function toLocalPath(uri: string): string;
export declare class Untitled {
    static isUntitledFile(uri: string): boolean;
    static toDiskUri(untitledUri: string): string;
    static UNTITLED_ROOT: string;
    static UNTITLED_ROOT_URI_ONDISK: string;
    static UNTITLED_ROOT_URI: string;
}
export declare function toSimpleUri(filename: string): string;
export declare function toCollectionString<T>(collection: Iterable<T>, separator?: string): string;
export declare function empty(): any;
export declare class Adapter {
    clientRootUri: string;
    localRoot: string;
    constructor(clientRootUri: string, localRoot?: string);
    toAbsoluteLocalPath(localPath: string): string;
    toUri(filename: string): string;
}
export declare function adaptSymbolKind(cdsvKind: Kind, expectedKind?: Kind): LSP.SymbolKind;
