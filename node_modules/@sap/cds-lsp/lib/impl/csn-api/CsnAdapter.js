"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LSP = require("vscode-languageserver-protocol");
const utils_1 = require("../utils");
const trace_1 = require("../utils/trace");
const Thing_1 = require("./Thing");
const ThingResolver_1 = require("./ThingResolver");
function adaptLocation(thing, adapter) {
    try {
        const cdsvLocation = ThingResolver_1.getSymbolLocation(thing);
        const localPath = adapter.toAbsoluteLocalPath(cdsvLocation.filename);
        return {
            uri: adapter.toUri(localPath),
            range: utils_1.RangeAdapter.adapt(cdsvLocation)
        };
    }
    catch (e) {
        return logError('Failed to convert location', thing, e, null);
    }
}
exports.adaptLocation = adaptLocation;
function logError(explanation, o, error, ret) {
    const tracer = trace_1.currentTrace().tracer(trace_1.LspTraceComponent.ADAPTER);
    tracer.warn(() => `${explanation}: ${trace_1.stringifyJson(o)}\n${error.stack || error}\nReturning: ${trace_1.stringifyJson(ret)}`);
    return ret;
}
function adaptDiagnostic(message) {
    return LSP.Diagnostic.create(utils_1.RangeAdapter.adapt(Thing_1.locationOf(message)), message.message, utils_1.SeverityAdapter.adapt(message.severity), message.messageId || '<unspecified>', 'CDS');
}
exports.adaptDiagnostic = adaptDiagnostic;
//# sourceMappingURL=CsnAdapter.js.map